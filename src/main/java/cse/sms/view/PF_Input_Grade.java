/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cse.sms.view;

import cse.sms.control.UserData;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author LG
 */
public class PF_Input_Grade extends javax.swing.JFrame {
    UserData loginUser = UserData.getInstance();
    /**
     * Creates new form PF_Input_Grade
     */
    public PF_Input_Grade() {
        initComponents();
        setTitle("교수 - 성적 입력 " + loginUser.getID() + " " + UserData.getName());
        setLocationRelativeTo(null);
    }
    
     private String lectureNumber;
    private String lectureName;
    
    public PF_Input_Grade(String lectureNumber, String lectureName) { // 'studentclasses.txt' 파일에서 데이터를 읽어옴
        this.lectureNumber = lectureNumber;
        this.lectureName = lectureName;
        initComponents();
        setTitle("교수 - 성적입력 " + loginUser.getID() + " " + UserData.getName());
        setLocationRelativeTo(null);
        // 강의 번호와 강의명을 사용하여 수강생 목록을 불러올 수 있음.
    }
    
    public List<String[]> readStudentClasses(String lectureNumber) throws IOException {
        
    File file = new File("studentclasses.txt");
    BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"));
    List<String[]> studentClasses = new ArrayList<>();
    String line;
    while ((line = br.readLine()) != null) {
        String[] data = line.split(",");
        
        if (data.length < 3) { // 필요한 필드가 모두 있는지 확인
            continue; // 필드가 부족한 행은 건너뜀.
        }
        
        if (data[2].equals(lectureNumber)) {
            studentClasses.add(new String[] {data[0], data[1], data[5], data[8]}); // 학번, 학생 이름, 학과, 학점을 추가
        }
    }
    br.close();
    return studentClasses;
}

    public void fillTable(String lectureNumber) {
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    model.setRowCount(0); // 테이블의 모든 행을 삭제
    try {
        List<String[]> studentClasses = readStudentClasses(lectureNumber);
        for (String[] studentClass : studentClasses) {
            model.addRow(studentClass); // 테이블에 행을 추가
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
}
    
    private void updateGrade(String studentNumber, String newGrade) throws IOException {
        
        File file = new File("studentclasses.txt");
        List<String> lines = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] data = line.split(",");
                
                if (data.length >= 2 && data[0].equals(studentNumber)&&data[3].equals(lectureName)) {
                    data[8] = newGrade; // 성적 업데이트
                    line = String.join(",", data);
                }
                lines.add(line);
            }
        }

        try (BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file, false), "UTF-8"))) {

            for (String line : lines) {
                bw.write(line);
                bw.newLine();
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButt_Back = new javax.swing.JButton();
        jButt_Input = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "이름", "학번", "학과", "성적"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("성적 입력");

        jLabel2.setText("성적 입력");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D", "F" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButt_Back.setText("뒤로");
        jButt_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButt_BackActionPerformed(evt);
            }
        });

        jButt_Input.setText("입력");
        jButt_Input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButt_InputActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "학번", "이름", "학과", "성적"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButt_Back))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButt_Input))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButt_Input)
                    .addComponent(jButt_Back))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButt_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButt_BackActionPerformed
        PF_FirstPage pf = new PF_FirstPage();
        pf.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButt_BackActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButt_InputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButt_InputActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow != -1) {
            String grade = (String) jComboBox1.getSelectedItem(); // 선택한 성적을 가져옴
            String studentNumber = (String) jTable2.getValueAt(selectedRow, 0); // 선택한 학생의 ID을 가져옴
            
            try {
                updateGrade(studentNumber, grade);
                JOptionPane.showMessageDialog(this, "성적이 입력되었습니다."); // 성적 입력 확인 메시지
                fillTable(lectureNumber); // 현재 선택된 강의 번호로 테이블을 업데이트
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "학생을 선택해주세요.");
        }
    }//GEN-LAST:event_jButt_InputActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButt_Back;
    private javax.swing.JButton jButt_Input;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
